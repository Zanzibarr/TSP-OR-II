DOMANDE:


APPUNTI:
- profiling: capire quali parti richiedono più parti
x precompute_min_edges: aggiungere codice per verificare che liste siano giuste
x sortare con libreria (qsort)
x modalità verbose: stampare a schermo che ho fatto check
x matrici: allocare array unico con dim. adatta (matrice come mega array, righe una dopo l'altra)
x meglio sort_edges di min_edges come nome
x min_edges: liberare righe singole e poi spazio per matrice
- vargrind per controllare memory leaks
x calloc: fare casting di puntatore ritornato da funzione
x piuttosto che fare nested loop, funzioni separate
x best_sol: meglio di no, non è detto che sia ottima (meglio di no per multithreading)
x fare check_integrity per valori alti di verbose (stampare "sempre" aggiornamento incumbent)

MIGLIORAMENTI:
- mostare in stile diverso nodo iniziale
- controllo più preciso di timelimit (e.g. controllo dopo greedy)
x difficile che serva stampare soluzione intera
x formato fisso per stampare numeri (numero fisso di cifre e.g. 4d)
x meglio allocare con calloc per array (usare allocazione statica se so che sono piccoli)
x controllare che i in check_integrity sia valore accettabile di nodo
x possibile aggiornare direttamente costo in 2optswap
- implementare scambio 2opt con costo migliore
- sempre g2opt, ma prendo starting node a random

IDEE MIE:
- nuova funzione per cercare in min_edges (unico array, saltare colonne di già visto)